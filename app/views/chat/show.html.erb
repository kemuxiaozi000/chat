
<!------ Include the above in your HEAD tag ---------->
<html>
<head>
    <meta charset='UTF-8'>
    <meta name="robots" content="noindex">
    <link rel="shortcut icon" type="image/x-icon" href="//production-assets.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" />
    <link rel="mask-icon" type="" href="//production-assets.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" />
    <link rel="canonical" href="https://codepen.io/emilcarlsson/pen/ZOQZaV?limit=all&page=74&q=contact+" />

    <script src="https://use.typekit.net/hoy3lrg.js"></script>
    <script>
        try {
            Typekit.load({
                async: true
            });
        } catch (e) {}
    </script>

    <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'>
    <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css'>
    <%= render 'main_style' %>
    <%= render 'more_profile' %>
    <%= render 'revise_notename' %>
</head>

<body>
    <div id="frame">
        <div id="sidepanel">
            <div id="profile">
                <div class="wrap" v-for="(item, index) in tableDataSelfInfo" :key="index">
                    <img id="profile-img" v-bind:src="item.photo" class="online" alt="no image" onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />
                    <p style="width:110px">
                        <%if current_user.present?%>
                            <%= current_user.nickname %>
                        <% end %>
                    </p>
                    <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-default dropdown-toggle dropdown-toggle-split dropdown-toggle-self" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: #6c757d;">
                            <span class="sr-only"></span>
                        </button>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton" style="line-height:30px;">
                            <button class="dropdown-item dropdown-item-self" id="more_profile" type="button" data-toggle="modal" data-target="#modalMoreProfile"><i class="fas fa-address-card mr-2" style="opacity: 0.5;"></i>完善信息</button>
                            <button class="dropdown-item dropdown-item-self" id="desktop_notify" type="button"><i class="fas fa-bell-slash mr-2" style="opacity: 0.5;"></i>桌面通知</button>
                            <button class="dropdown-item dropdown-item-self" id="volumn_mute" type="button"><i class="fas fa-volume-mute mr-2" style="opacity: 0.5;"></i>关闭声音</button>
                            <button class="dropdown-item dropdown-item-self" id="feedback" type="button"><i class="fas fa-envelope mr-2" style="opacity: 0.5;"></i>意见反馈</button>
                        </div>
                    </div>
                    <% if user_signed_in? %>
                        <%= link_to destroy_user_session_path, method: :delete, onclick: "chatPreviewSaveDB()" do %>
                            <i class="fas fa-power-off" style="margin:10px;"></i>
                        <% end %>
                    <% else %>
                        <li>
                            <%= link_to('Login', new_user_session_path) %>
                        </li>
                    <% end %>
                    <!--
                    <div id="status-options">
                        <ul>
                            <li id="status-online" class="active"><span class="status-circle"></span>
                                <p>Online</p>
                            </li>
                            <li id="status-away"><span class="status-circle"></span>
                                <p>Away</p>
                            </li>
                            <li id="status-busy"><span class="status-circle"></span>
                                <p>Busy</p>
                            </li>
                            <li id="status-offline"><span class="status-circle"></span>
                                <p>Offline</p>
                            </li>
                        </ul>
                    </div>
                    <div id="expanded">
                        <label for="twitter"><i class="fa fa-facebook fa-fw" aria-hidden="true"></i></label>
                        <input name="twitter" type="text" value="mikeross" />
                        <label for="twitter"><i class="fa fa-twitter fa-fw" aria-hidden="true"></i></label>
                        <input name="twitter" type="text" value="ross81" />
                        <label for="twitter"><i class="fa fa-instagram fa-fw" aria-hidden="true"></i></label>
                        <input name="twitter" type="text" value="mike.ross" />
                    </div>
                    -->
                </div>
            </div>
            <div id="search">
                <div id="dropdown-wrapper">
                    <label for=""><i class="fa fa-search" aria-hidden="true"></i></label>
                    <input v-model="searchAll" @input="inputFn" type="text" class="dropdown-search" aria-expanded="true" placeholder="Search contacts..."/>
                    <div class="dropdown-menu dropdown-menu-search" x-placement="bottom-start" style="width: 261px;position: absolute; transform: translate3d(0px, 151px, 0px); top: 0px; left: 0px; will-change: transform;">
                        <div v-if="searchList.user_list.length>0" class="dropdown-header" style="font-size:12px; float:left">联系人</div>
                        <a class="dropdown-item" href="#" v-for="item in searchList.user_list">
                            <div class="wrap">
                                <span class="contact-status online"></span>
                                <img v-if="item.photo == ''" src="/assets/group_default-8115c58d5ced7497e66b68b53f9b21b1b9a512966f267aa8e729ab16023c7591.jpg" />
                                <img v-else v-bind:src="item.photo" alt="" />
                                <div class="meta ml-2">
                                    <div class="name text-ellipsis mb-2" style="font-size:16px;" v-html="item.user_note_name"></div>
                                    <div class="name text-ellipsis" style="font-size:12px;" v-html="item.include"></div>
                                </div>
                            </div>
                        </a>
                        <div v-if="searchList.group_list.length>0" class="dropdown-header" style="font-size:12px; float:left">群聊</div>
                        <a class="dropdown-item" href="#" v-for="item in searchList.group_list">
                            <div class="wrap">
                                <span class="contact-status online"></span>
                                <img v-if="item.photo == ''" src="/assets/group_default-8115c58d5ced7497e66b68b53f9b21b1b9a512966f267aa8e729ab16023c7591.jpg" />
                                <img v-else v-bind:src="item.photo" alt="" />
                                <div class="meta">
                                    <div class="name text-ellipsis mb-2" style="font-size:16px;" v-html="item.group_name"></div>
                                    <div class="name text-ellipsis" style="font-size:12px;" v-html="item.include"></div>
                                </div>
                            </div>
                        </a>
                        <div v-if="searchList.user_list.length <= 0 && searchList.group_list.length <= 0" class="dropdown-header" style="font-size:12px;">无匹配结果</div>
                    </div>
                </div>
            </div>
            <div id="contacts">
                <ul class="nav nav-pills m-2" id="pills-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true"><i class="fa fa-comments"></i></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false"><i class="fa fa-user"></i></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="pills-contact-tab" data-toggle="pill" href="#pills-contact" role="tab" aria-controls="pills-contact" aria-selected="false"><i class="fa fa-gamepad"></i></a>
                    </li>
                </ul>
                <div class="tab-content" id="pills-tabContent">
                    <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                        <!--<ul v-if="reverseData.length>0" v-for="chatPreview in reverseData">-->
                        <ul v-if="chatPreviewTableData.length>0" v-for="chatPreview in chatPreviewTableData">
                            <li class="contact recent-contact" @click="chatPreviewclick(chatPreview.channel_id,chatPreview.photo,chatPreview.name)">
                                <div class="wrap">
                                    <span class="contact-status online"></span>
                                    <img v-if="chatPreview.photo == '' && chatPreview.channel_id.substring(0,3)=='GRP'" src="/assets/group_default-8115c58d5ced7497e66b68b53f9b21b1b9a512966f267aa8e729ab16023c7591.jpg" />
                                    <img v-else v-bind:src="chatPreview.photo" alt="" />
                                    <div class="meta">
                                        <p class="name text-ellipsis">{{chatPreview.name}}</p>
                                        <p class="preview">
                                            <span style="float:left;width:130px;font-size:13px;overflow: hidden;text-overflow:ellipsis;white-space: nowrap;font-color: #32465a;opacity: .8;">{{chatPreview.latest_msg_brief}}</span>
                                            <span style="float:right;width:38px;font-size:13px">{{chatPreview.latest_msg_time}}</span>
                                        </p>
                                        <!--<p class="preview">{{chatPreview.latest_msg_time}}</p>-->
                                    </div>
                                </div>
                            </li>
                            <!--
                            <li class="contact active">
                                <div class="wrap">
                                    <span class="contact-status busy"></span>
                                    <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Harvey Specter</p>
                                        <p class="preview">Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and forty six other things.</p>
                                    </div>
                                </div>
                            </li>
                            <li class="contact">
                                <div class="wrap">
                                    <span class="contact-status away"></span>
                                    <img src="http://emilcarlsson.se/assets/rachelzane.png" alt="" />
                                    <div class="meta">
                                        <p class="name">Rachel Zane</p>
                                        <p class="preview">I was thinking that we could have chicken tonight, sounds good?</p>
                                    </div>
                                </div>
                            </li>
                            -->
                        </ul>
                    </div>
                    <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                        <ul v-if="tableDataPeople.length>0" v-loading="loadingPeople" element-loading-text="loading..." v-for="item in tableDataPeople">
                            <li>{{item.index}}</li>
                            <li class="contact">
                                <div class="wrap" v-for="person in item.personList" @click="selectChatTarget(person.uid,person.name, person.photo)">
                                    <span class="contact-status online"></span>
                                    <img v-bind:src="person.photo" alt="no image" onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'"  />
                                    <div class="meta mt-1 mb-1 addrbook-contact">
                                        <div class="nameplus">
                                            <div class="personal-name">{{person.name}}</div>
                                            <div>
                                                <button type="button" class="btn btn-sm btn-default dropdown-toggle dropdown-toggle-split dropdown-toggle-person"
                                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: #6c757d;"
                                                    @click.stop="addrbookPersonClick(person.uid, person.name)">
                                                    <span class="sr-only"></span>
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton" style="line-height:30px;">
                                                    <button class="dropdown-item dropdown-item-addr" id="notename_revise" type="button" @click.stop="openModalNotenameRevise(person.name)">
                                                        <i class="fas fa-address-card mr-2" style="opacity: 0.5;"></i>
                                                        修改备注
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="name">&nbsp;</p>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">
                        <ul v-if="tableDataGame.length>0" v-loading="loadingGame" element-loading-text="loading...">
                            <li class="contact" v-for="item in tableDataGame" @click="selectGame(item.game_id, item.href)">
                                <div class="wrap">
                                    <img v-bind:src="item.cover" alt="" />
                                    <div class="meta">
                                        <p class="name">{{item.name}}</p>
                                    </div>
                                </div>
                                <el-rate v-model="item.star" disabled show-score text-color="#ff9900"></el-rate>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>

            <div id="bottom-bar">
                <button id="addcontact" data-toggle="modal" data-target="#modalAddContact">
                    <i class="fa fa-user-plus fa-fw" aria-hidden="true"></i>
                    <span>Add contact</span>
                </button>
                <button id="settings">
                    <i class="fa fa-cog fa-fw" aria-hidden="true"></i>
                    <span>Settings</span>
                </button>
            </div>
        </div>
        <div class="content">
            <div class="card">
                <div class="card-header target-contact-profile" id="headingOne">
                    <img v-bind:src="targetPhoto" alt="" />
                    <p>{{targetNotedName}}</p>
                    <button v-if="targetNotedName!='未选择聊天'" class="btn btn-link target-profile-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        <i class="fas fa-chevron-down"></i>
                    </button>
                    <div class="social-media">
                        <i class="fa fa-facebook" aria-hidden="true"></i>
                        <i class="fa fa-twitter" aria-hidden="true"></i>
                        <i class="fa fa-instagram" aria-hidden="true"></i>
                    </div>
                </div>
                <div id="collapseOne" class="collapse" aria-labelledby="headingOne">
                    <div class="card-body member-info-container">
                        <div class="member-info-item member-info-item-add">
                            <img src="/assets/icon_add-d138b4f886d86cc5873d41ec8358f52049820250cd5145a9abc4539f0f930a07.png"
                            class="member-info-item-img" alt="no image" />
                            <p>添加</p>
                        </div>
                        <div v-if="groupList.length>0" v-for="item in groupList" class="member-info-item">
                            <img id="profile-img" v-bind:src="item.photo" class="member-info-item-img"
                            alt="no image" onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />
                            <p>{{item.name}}</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="messages">
                <ul v-if="chatRecordTableData.length>0" v-for="chatRec in chatRecordTableData">
                    <li class="msg-reply" v-if="chatRec.dir == 'left'">
                        <img v-if="chatRec.photo == 'personal'" v-bind:src="targetPhoto" alt="" />
                        <img v-else :src="chatRec.photo" alt="no image"
                        onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />
                        <div class="msg-flex-end">
                            <span v-if="chatRec.photo == 'personal'" style="margin-bottom:4px">{{chatRec.time}}</span>
                            <span v-else style="margin-bottom:4px">{{chatRec.notedName}}&nbsp;&nbsp;{{chatRec.time}}</span>
                            <div v-if="chatRec.type!='msg'" class="download-msg">
                                <div class="download-msg-icon">
                                    <i :class="'fas fa-3x fa-'+chatRec.type" style="margin: 5px;"></i>
                                </div>
                                <div class="download-msg-right">
                                    <p>{{chatRec.content}}</p>
                                    <p> {{chatRec.size}} &nbsp;|&nbsp;
                                         <a :href="'chat/attachment_download?filename='+ chatRec.content + ':::fileuid:' + chatRec.fileuid">
                                            下载
                                        </a>
                                    </p>
                                </div>
                            </div>
                            <p v-else class="msg-p" style="word-break:break-word;">
                                {{chatRec.content}}
                            </p>
                        </div>
                    </li>
                    <li class="msg-sent" v-else-if="chatRec.dir == 'right'" v-for="item in tableDataSelfInfo">
                        <img v-bind:src="item.photo" alt="no image"
                        onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />
                        <div class="msg-flex-end">
                            <span v-if="chatRec.photo == 'personal'" style="margin-bottom:4px">{{chatRec.time}}</span>
                            <span v-else style="margin-bottom:4px">{{chatRec.time}}&nbsp;&nbsp;我</span>
                            <div v-if="chatRec.type!='msg'" class="download-msg">
                                <div class="download-msg-icon"><i :class="'fas fa-3x fa-'+chatRec.type" style="margin: 5px;"></i></div>
                                <div class="download-msg-right">
                                    <p>{{chatRec.content}}</p>
                                    <p> {{chatRec.size}} &nbsp;|&nbsp;
                                        <a :href="'chat/attachment_download?filename='+ chatRec.content + ':::fileuid:' + chatRec.fileuid">
                                            下载
                                        </a>
                                    </p>
                                </div>
                            </div>
                            <p v-else class="msg-p" style="word-break:break-word;">
                                <!-- <a :href="'chat/attachment_download?filename='+chatRec.content">
                                    <i class="fas fa-download"></i>
                                </a> -->
                                {{chatRec.content}}
                            </p>
                        </div>
                    </li>
                </ul>
            </div>
            <div class="message-input" style="visibility:hidden">
                <div class="wrap">
                    <input type="text" class="pick-emoji" placeholder="Write your message..." />
                    <i class="fa fa-paperclip attachment" aria-hidden="true"></i>
                    <el-upload hidden=true
                        action="chat/attachment_upload"
                        :on-success="attachSuccess"
                        :limit="1"
                        :file-list="fileList"
                        :before-upload="beforeUpload">
                        <el-button id="attach_btn" size="small" type="primary">点击上传</el-button>
                        <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>
                    </el-upload>
                    <button class="submit"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
        <input type="hidden" id="currentChanel" value="" />
        <!--add contact modal-->
        <div class="modal fade" id="modalAddContact">
            <div class="modal-dialog dialog-center" style="margin-top: 128px">
                <div class="modal-content" style="width: 450px;">
                    <div class="modal-header">
                        <h4 class="modal-title">Add contact</h4>
                    </div>
                    <div class="modal-body">
                        <nav>
                            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                                <a class="nav-item nav-link active" id="nav-search-id-tab" data-toggle="tab" href="#nav-search-id" role="tab" aria-controls="nav-search-id" aria-selected="true">用户ID</a>
                                <a class="nav-item nav-link" id="nav-search-name-tab" data-toggle="tab" href="#nav-search-name" role="tab" aria-controls="nav-search-name" aria-selected="false">用户名</a>
                            </div>
                        </nav>
                        <div class="tab-content" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="nav-search-id" role="tabpanel" aria-labelledby="nav-search-id-tab">
                                <div class="input-group mb-3 mt-2">
                                    <input type="text" class="form-control" id="add-contact-search-id" placeholder="按用户id精确匹配" aria-label="Recipient's username" aria-describedby="button-addon2">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary btn-user-search" type="button" id="button-addon2"><i
                                                class="fa fa-search" aria-hidden="true"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="nav-search-name" role="tabpanel" aria-labelledby="nav-search-name-tab">
                                <div class="input-group mb-3 mt-2">
                                    <input type="text" class="form-control" id="add-contact-search-name" placeholder="按用户名模糊匹配" aria-label="Recipient's username" aria-describedby="button-addon3">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary btn-user-search" type="button" id="button-addon3"><i
                                                class="fa fa-search" aria-hidden="true"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="result-show">
                            <div class="card">
                                <div class="card-header border-0">
                                    <h3 class="card-title">用户列表</h3>
                                </div>
                                <div class="card-body p-0">
                                    <table class="table table-striped table-valign-middle">
                                        <thead>
                                            <tr>
                                                <th>User</th>
                                                <th>Id</th>
                                                <th>xxx</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr v-if="tableDataAddContactSearchRes.length>0" v-loading="loadingAddContactSearchRes"element-loading-text="loading..." v-for="item in tableDataAddContactSearchRes">
                                                <td>
                                                    <div style="display:flex; flex-direction: row; flex-wrap: nowrap;align-items: center;">
                                                        <img v-bind:src="item.photo" alt="no image" onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" class="img-circle img-size-32 mr-2">
                                                        <span>{{item.nickname}}</span>
                                                    </div>
                                                </td>
                                                <td>{{item.user_id}}</td>
                                                <td>
                                                    <small class="text-success mr-1">
                                                        <i class="fas fa-arrow-up"></i>
                                                        12%
                                                    </small>
                                                </td>
                                                <td>
                                                    <div v-if="item.is_friend==false">
                                                        <a href="javascript:void(0);" @click="addFriend(item.user_id)" class="text-muted">
                                                            <i class="fa fa-user-plus fa-fw"></i>
                                                        </a>
                                                    </div>
                                                    <div v-else-if="item.is_friend==true">
                                                        <i class="fas fa-user-friends"></i>
                                                    </div>
                                                    <div v-else-if="item.is_friend=='wait'">
                                                        <i class="fas fa-hourglass-half"></i>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary " data-dismiss="modal" @click="addContactClose">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!--more profile modal-->
        <div class="modal fade" id="modalMoreProfile">
            <div class="modal-dialog dialog-center" style="margin-top: 128px">
                <div class="modal-content" style="width: 550px;height: 500px;">
                    <div class="modal-header">
                        <h3 class="modal-title">完善个人信息</h3>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div class="form-row">
                                <div class="col-md-7">
                                    <div class="input-group mt-3 mb-3 ml-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="inputGroupPrepend1">User ID</span>
                                        </div>
                                        <input type="text" class="form-control" id="form_user_id" :value="selfId" readonly>
                                    </div>
                                    <div class="input-group mt-3 mb-3 ml-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="inputGroupPrepend2">E-mail</span>
                                        </div>
                                        <input type="text" class="form-control" id="form_email" :value="editProfileData.email" readonly>
                                    </div>
                                    <div class="input-group mt-3 mb-3 ml-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="inputGroupPrepend3">Nickname</span>
                                        </div>
                                        <input v-model="editProfileData.nickname" type="text" class="form-control" id="form_nickname" aria-describedby="inputGroupPrepend2" required>
                                    </div>
                                </div>
                                <div class="col-md-5 photo-upload">
                                    <el-upload
                                        class="avatar-uploader"
                                        action="chat/avatar_upload"
                                        :show-file-list="false"
                                        :on-success="handleAvatarSuccess"
                                        :before-upload="beforeAvatarUpload">
                                        <img v-if="editProfileData.imageUrl" :src="editProfileData.imageUrl" class="avatar">
                                        <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                                    </el-upload>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-5">
                                    <div class="input-group m-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="tel">Tel</span>
                                        </div>
                                        <input v-model="editProfileData.tel" type="text" class="form-control" id="form_tel">
                                    </div>
                                </div>
                                <div class="col-md-5 offset-md-1">
                                    <div class="input-group m-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="sex">Sex</span>
                                        </div>
                                        <select v-model="editProfileData.sex" class="form-control" id="form_sex">
                                            <option v-if="editProfileData.sex" selected>{{editProfileData.sex}}</option>
                                            <option disabled value="">...请选择...</option>
                                            <option>Male</option>
                                            <option>Female</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="col-md-5">
                                    <div class="input-group date m-2" id="datetimepicker1">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="birthday">Birthday</span>
                                        </div>
                                        <input v-model="editProfileData.birthday" type="text" class="form-control" id="form_birthday"/>
                                        <span class="input-group-append">
                                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                        </span>
                                    </div>
                                </div>
                                <div class="col-md-5 offset-md-1">
                                    <div class="input-group m-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text label-text" id="hobby">Hobby</span>
                                        </div>
                                        <select v-model="editProfileData.hobby" id="form_hobby" class="form-control">
                                            <option v-if="editProfileData.hobby" selected>{{editProfileData.hobby}}</option>
                                            <option disabled value="">...请选择...</option>
                                            <option>Sports</option>
                                            <option>Game</option>
                                            <option>Zhai</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @click="editProfile()">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!--start group chat modal-->
        <div class="modal fade" id="modalStartChat">
            <div class="modal-dialog dialog-center" style="margin-top: 128px">
                <div class="modal-content" style="width: 450px;">
                    <div class="modal-header">
                        <h3 class="modal-title">发起群聊</h3>
                    </div>
                    <div class="modal-body">
                        <p>群聊名称(必填)</p>
                        <div class="start-chat-photo-inline">
                            <div class="mb-3">
                                <el-input
                                    placeholder="为该群聊取个名字"
                                    v-model="groupChatName">
                                </el-input>
                            </div>
                            <div id="must_fill_alert" style="font-size:10px; color:red;"></div>
                        </div>
                        <div>
                        <p>选择联系人</p>
                        <div class="start-chat-photo-inline">
                            <div v-for="item in selectedTargets">
                                <img v-bind:src="item.photo" class="start-group-chat-img" alt="no image"
                                onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />
                            </div>
                            <div>
                                <el-input
                                    placeholder="搜索"
                                    prefix-icon="el-icon-search"
                                    v-model="searchTarget">
                                </el-input>
                            </div>
                        </div>
                        <div>
                            <ul v-if="tableDataPeople.length>0" v-loading="loadingPeople" element-loading-text="loading..." v-for="item in tableDataPeople">
                                <li>{{item.index}}</li>
                                <template v-for="person in item.personList">
                                    <el-checkbox v-model="person.ischeck" class="checkbox-inline" :disabled="person.isDisabled" @change="handleCheckChange(person.ischeck, person.uid, person.photo, person.name)">
                                        <img v-bind:src="person.photo" class="start-group-chat-img" alt="no image"
                                        onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />
                                        <div class="ml-3">{{person.name}}</div>
                                    </el-checkbox>
                                </template>
                            </ul>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary start-chat-confirm" disabled="true">Confirm</button>
                        <button type="button" class="btn btn-secondary start-chat-close" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src='//production-assets.codepen.io/assets/common/stopExecutionOnTimeout-b2a7b3fe212eaa732349046d8416e00a9dec26eb7fd347590fbced3ab38af52e.js'></script>
    <script type="text/javascript" src="https://cdn-hangzhou.goeasy.io/goeasy.js"></script>
    <script type="text/javascript">
        var selfId = "<%if current_user.present?%><%= current_user.id%><%end%>"
        var notify
        var goeasy = new GoEasy({
            appkey: 'BC-242425a937724e418b4f51105a138e3b'
        });

        $(document).ready(function(){

        });

        $(document).ready(function() {
            // 登录就创建临时websocket,用于接收广播和服务器发送的消息
            var channel_tmp = "|SERVER|" + selfId
            addSelfAndServerChannel(channel_tmp)
            // emoji初始化
            $('.pick-emoji').emojiPicker({
                height: '100px',
                width:  '450px'
            });
        });

        //点击发送
        $(document).on("click", ".submit", function () {
            // newMessage();
            publishMessage();
            //  $('.pick-emoji').emojiPicker("toggle")
        });

        // 下拉菜单
        $(document).on("click", ".dropdown-item-self", function () {
            $('.dropdown-toggle-self').dropdown()
        });

        // 点击添加朋友
        $(document).on("click", ".add-friend", function () {
            // 弹出框，好友添加请求已发送，等待对方回复，然后
        });

        $(".messages").animate({
            scrollTop: $(document).height()
        }, "fast");

        $("#profile-img").click(function() {
            $("#status-options").toggleClass("active");
        });

        $(".expand-button").click(function() {
            $("#profile").toggleClass("expanded");
            $("#contacts").toggleClass("expanded");
        });

        $("#status-options ul li").click(function() {
            $("#profile-img").removeClass();
            $("#status-online").removeClass("active");
            $("#status-away").removeClass("active");
            $("#status-busy").removeClass("active");
            $("#status-offline").removeClass("active");
            $(this).addClass("active");

            if ($("#status-online").hasClass("active")) {
                $("#profile-img").addClass("online");
            } else if ($("#status-away").hasClass("active")) {
                $("#profile-img").addClass("away");
            } else if ($("#status-busy").hasClass("active")) {
                $("#profile-img").addClass("busy");
            } else if ($("#status-offline").hasClass("active")) {
                $("#profile-img").addClass("offline");
            } else {
                $("#profile-img").removeClass();
            };

            $("#status-options").removeClass("active");
        });

        // function newMessage() {
        //     message = $(".message-input input").val();
        //     if ($.trim(message) == '') {
        //         return false;
        //     }

        //     $('<li class="msg-reply" v-for="item in tableDataSelfInfo"><img v-bind:src="item.photo" alt="" /><div><span>8:40 AM, Today</span><p>' + message + '</p></div></li>')
        //         .appendTo($('.messages ul'));
        //     $('.message-input input').val(null);
        //     $('.contact.active .preview').html('<span>You: </span>' + message);
        //     $(".messages").animate({
        //         scrollTop: $(document).height()
        //     }, "fast");
        // };

        // $(window).on('keydown', function(e) {
        //     if (e.which == 13) {
        //         // newMessage();
        //         publishMessage();
        //         return false;
        //     }
        // });

        var frame = new Vue({
            el: "#frame",
            data:{
                dropDownClickStatus:false,
                selfId:"<%if current_user.present?%><%= current_user.id%><%end%>",
                currentChatUid:"",                  //（如果当前是群，则为channelid，如果是个人，则为user_id）
                currentChannel:"",
                tableDataSelfInfo:"",
                loadingSelfInfo: false,
                loadingShowMsg: false,
                loadingAddressBook: false,
                chatRecordTableData: [],
                targetNotedName: "未选择聊天",
                targetPhoto: '',
                loading: false,
                loadingPeople: false,
                chatPreviewTableData:[],
                tableDataPeople:"",
                groupList:[],
                tableDataGame: [
                    {game_id: "game_01", cover: "/assets/game/mario-ba8d4ecc8f126ad22bb0cf5d9d7f2aa4de378b69866e2d096038a6933297e110.jpg", name: "马里奥", star: "4.2", time:"2018-10-11", href:"mario"},
                    {game_id: "game_02", cover: "/assets/game/systemer-4625053fa9975bc3b87bddc40c001b40a8f9911b7ee9a0196abdd57fc336c5e0.jpg", name: "空间站修理工",star: "3.1", time:"2018-10-12", href:"systemer"}
                ],
                loadingGame: false,
                value: 3.7,
                loadingAddContactSearchRes: false,
                tableDataAddContactSearchRes: [],
                editProfileData: {},
                edit_avatar: "",
                memberInfoClickFlag: false,
                searchTarget: "",
                selectedTargets: [],
                defaultGroupAvater: "/assets/group_default-8115c58d5ced7497e66b68b53f9b21b1b9a512966f267aa8e729ab16023c7591.jpg",
                fileList: [],
                groupChatName: "",
                searchAll: "",
                searchList: {"user_list":[], "group_list":[], "keyword":""},
            },

            computed: {
                reverseData() {
                    console.log("reverseData")
                    return this.chatPreviewTableData.reverse();
                }
            },

            created: function () {
                this.loadTableDataSelfInfo()
            },
            watch: {
                "targetNotedName": function(newVal) {
                    if(newVal!='未选择聊天' ) {
                        // console.log("not pick")
                        // $(".message-input").removeAttr("hidden");
                        $(".message-input").attr("style", "visibility:visible");
                    }
                }
            },
            // mounted
            methods: {
                inputFn(){
                    var _this = this
                    console.log("inputFn: "+ this.searchAll)
                    if(this.searchAll == "") {
                        $('#dropdown-wrapper').removeClass("show")
                        $('.dropdown-menu-search').removeClass("show")
                        $('.dropdown-menu-search').attr("aria-expanded",false)
                    } else {
                        // $("body").queue(function() {    //将ajax代码放入队列
                            $.ajax({
                                url: '/chat/search_user',
                                type: 'post',
                                // asyn: false,
                                data: {
                                    keyword: _this.searchAll,
                                },
                                success: function (res) {
                                    if(res["keyword"] == _this.searchAll) {
                                        _this.searchList = res
                                        $('#dropdown-wrapper').addClass("show")
                                        $('.dropdown-menu-search').addClass("show")
                                        $('.dropdown-menu-search').attr("aria-expanded",true)
                                    }
                                },
                                error: function (err) {
                                },
                            })
                        // });
                        // $("body").dequeue();
                    }
                },

                // 附件
                attachSuccess(response, file, fileList){
                    console.log("attachSuccess response");
                    console.log(response);
                    // 传一个消息，和发信息一样
                    publishMessage(fileList[0].name,fileList[0].size,response)
                },
                beforeUpload(file) {
                    const isLt20M = file.size / 1024 / 1024 < 20     //这里做文件大小限制
                    if (!isLt20M) {
                        this.$message.error('附件大小不能超过 20MB!');
                    }
                    return isLt20M
                },

                // 发起群聊多选框 checkbox
                handleCheckChange(_ischeck, _uid, _photo, _name) {
                    if(_ischeck) {
                        this.selectedTargets.push({"user_id":_uid, "photo":_photo, "name":_name})
                    } else {
                        for(var i = 0; i < this.selectedTargets.length; i++){
                            if(_uid == this.selectedTargets[i]["user_id"]){
                                this.selectedTargets.splice($.inArray(this.selectedTargets[i],this.selectedTargets),1);
                            }
                        }
                    }
                    // 改变 发起聊天多选框 confirm按钮disabled状态
                    if (this.selectedTargets.length == 0 ||(this.selectedTargets.length == 1 && this.selectedTargets[0]["user_id"] == this.currentChatUid) ) {
                    } else {
                        $(".start-chat-confirm").attr("disabled", false)
                    }
                },

                handleCommand(command) {
                    this.$message('click on item ' + command);
                    if(command == "add"){

                    } else {

                    }
                },

                addrbookPersonClick: function(_uid, _name) {
                    // 要点两下对应
                    // if(!this.addrbookPersonClickFlag){
                    //     $('.dropdown-toggle-person').click()
                    //     this.addrbookPersonClickFlag = true
                    // }
                    $('.dropdown-toggle-person').dropdown()
                    $('#revise-name').val(_name)
                    $('#revise-name').attr("beforeRevise", _name)
                    $('#revise-name').attr("selectId", _uid)
                },

                //addContact 点击close按钮，清空相关查询数据
                addContactClose: function() {
                    this.tableDataAddContactSearchRes = [];
                    this.loadingAddContactSearchRes = false;
                },

                openModalNotenameRevise: function(name) {
                    $("#modalNotenameRevise").modal()
                },

                // chat preview 点击某个聊天
                chatPreviewclick:function (_channel_id, _photo, _name) {
                    var index
                    if(this.chatPreviewTableData.length > 0) {
                        for (var i = 0; i < this.chatPreviewTableData.length; i++) {
                            if(_channel_id == this.chatPreviewTableData[i].channel_id ){
                            index = this.chatPreviewTableData.indexOf(this.chatPreviewTableData[i]);
                                break;
                            }
                        }
                    }
                    var index = this.chatPreviewTableData.indexOf(this.chatPreviewTableData[i]);
                    // 把点击的移动到最顶端
                    this.chatPreviewTableData = swapArr(this.chatPreviewTableData, index)
                    // 右边的chat record 显示
                    // 箭头点开的框收起
                    $("#collapseOne").removeClass("show")
                    $("#currentChanel").val(_channel_id)
                    this.targetNotedName = _name
                    this.chatRecordTableData = []
                    var _this = this
                    // 将顺序存入db 防止直接刷新页面导致新开的群聊丢失
                    chatPreviewSaveDB()

                    // 维护currentChatUid（如果当前是群，则为channelid，如果是个人，则为user_id）
                    if (_channel_id.substring(0,8) == "USR_CHAT") {
                        $.ajax({
                            url: '/chat/search_uid_by_channel',
                            type: 'post',
                            data: {
                                channel: _channel_id,
                            },
                            success: function (res) {
                                _this.currentChatUid = res
                                historyChatRecord(_channel_id)
                            },
                            error: function (err) {
                            }
                        })
                        this.targetPhoto = _photo
                    } else {
                        this.currentChatUid = _channel_id
                        if(_photo == "") {
                            this.targetPhoto = this.defaultGroupAvater
                        } else {
                            this.targetPhoto = _photo
                        }
                        //如果是群，先维护GroupList
                        $.ajax({
                            url: '/chat/find_group_member',
                            type: 'post',
                            // asyn: false,
                            data: {
                                channel: _channel_id,
                                except_self: false,
                            },
                            success: function (res) {
                                console.log(res)
                                _this.groupList = []
                                _this.groupList = res
                                historyChatRecord(_channel_id)
                            },
                        })
                    }
                },

                // 通讯录点击个人
                selectChatTarget:function (target_id, target_name, target_photo) {
                    console.log("selectChatTarget ")
                    $("#pills-home-tab").click();
                    if(this.currentChatUid != target_id){
                        this.chatRecordTableData = [];
                        this.currentChatUid = target_id;
                        this.targetPhoto = target_photo;
                        _this = this;
                        $.ajax({
                            url: '/chat/show_chat_record',
                            type: 'post',
                            data: {
                                user_id: this.selfId,
                                target_id: target_id
                            },
                            success: function (res) {
                                if (res.count !== 0) {
                                    _this.targetNotedName = target_name
                                    $("#currentChanel").val(res.channel_id)
                                    //channel history chat record
                                    historyChatRecord(res.channel_id)
                                    //左边选择的追加到chatPreview顶端(数据在底部)
                                    leftSelectMoveTop(res.channel_id)
                                } else {

                                }
                            },
                            error: function (err) {
                            }
                        })
                    }
                },

                // 加载个人信息
                loadTableDataSelfInfo: function (_channel = "") {
                    this.loadingSelfInfo = true;
                    var _this = this;
                    $.ajax({
                        url: '/chat/self_info',
                        type: 'post',
                        async: true,
                        data: {
                            user_id: this.selfId
                        },
                        success: function (res) {
                            _this.loadingSelfInfo = false;
                            if (res.count !== 0) {
                                _this.tableDataSelfInfo = res
                            } else {
                                _this.tableDataSelfInfo = []
                            }
                            // 给编辑个人信息赋值
                            _this.editProfileData = {
                                "nickname": _this.tableDataSelfInfo[0].nickname,
                                "email": _this.tableDataSelfInfo[0].email,
                                "sex": _this.tableDataSelfInfo[0].sex,
                                "tel": _this.tableDataSelfInfo[0].tel,
                                "imageUrl": _this.tableDataSelfInfo[0].photo,
                                "hobby": _this.tableDataSelfInfo[0].hobby,
                                "birthday": _this.tableDataSelfInfo[0].birthday
                            }
                            // 上次退出保存的最近聊天（chatpreview）
                            _this.chatPreviewTableData = _this.tableDataSelfInfo[0].chat_preview
                            _this.loadTableDataAddressBook()
                            //所有有关的channelid取得
                            chatPreviewCurrentUpdate()
                            if(_channel != "") {
                                for(var i = 0; i < frame.tableDataSelfInfo[0].channel.length; i++) {
                                    if (frame.tableDataSelfInfo[0].channel[i]["channel_id"] == _channel) {
                                        frame.targetPhoto = "/assets/group_default-8115c58d5ced7497e66b68b53f9b21b1b9a512966f267aa8e729ab16023c7591.jpg";
                                        frame.targetNotedName = frame.tableDataSelfInfo[0].channel[i]["name"]
                                    }
                                }
                                historyChatRecord(_channel)
                                leftSelectMoveTop(_channel)
                            }
                        },
                        error: function (err) {
                            _this.loadingSelfInfo = false
                            _this.tableDataSelfInfo = []
                        }
                    })
                },

                // 加载通讯录tab2的所有好友
                loadTableDataAddressBook: function () {
                    console.log("loadTableDataAddressBook")
                    this.loadingAddressBook = true;
                    var _this = this;
                    $.ajax({
                        url: '/chat/address_book',
                        type: 'post',
                        data: {
                            user_id: this.selfId
                        },
                        success: function (res) {
                            _this.loadingAddressBook = false
                            var result = [];
                            var index_arr = [];
                            for(var i = 97; i <=122; i++){
                                let obj = {}
                                var personInfoArr = []
                                obj["index"] = String.fromCharCode(i)
                                obj["personList"] = personInfoArr
                                result.push(obj)
                            }
                            // 排序
                            sortChinese(res, 'name')
                            res.forEach(function (val) {
                                if(index_tmp = getPinYinByName(val.name).substring(0,1)){
                                    result.forEach(function (tmp) {
                                        if (tmp["index"] == index_tmp){
                                            let obj_tmp = {}
                                            obj_tmp["uid"] = val.uid
                                            obj_tmp["name"] = val.name
                                            obj_tmp["photo"] = val.photo
                                            obj_tmp["ischeck"] = false
                                            obj_tmp["isDisabled"] = false
                                            tmp["personList"].push(obj_tmp)
                                        }
                                    });
                                }
                            });
                            for(var j = 0; j < result.length;){
                                if(result[j].personList == "" ){
                                    result.splice($.inArray(result[j],result),1);
                                } else {
                                    j++;
                                }
                            }
                            _this.loadingAddressBook = false
                            if (res.count !== 0) {
                                _this.tableDataPeople = result
                            } else {
                                _this.tableDataPeople = []
                            }
                        },
                        error: function (err) {
                            _this.loadingAddressBook = false
                            _this.tableDataPeople = []
                        }
                    })
                },

                // 添加好友
                addFriend: function (id) {
                    for( var i = 0; i < this.tableDataAddContactSearchRes.length; i++){
                        if (this.tableDataAddContactSearchRes[i].user_id == id) {
                            this.tableDataAddContactSearchRes[i].is_friend = "wait";
                        }
                    }
                    $.ajax({
                        url: '/chat/add_friend',
                        type: 'post',
                        data: {
                            add_user_id: id,
                        },
                    })
                },

                // 文件上传成功时的钩子
                handleAvatarSuccess(res, file) {
                    this.editProfileData.imageUrl = URL.createObjectURL(file.raw);
                    var _this = this
                    var reader = new FileReader();
                    reader.readAsDataURL(file.raw);
                    reader.onload = function (e) {
                        _this.edit_avatar = this.result;
                    }
                },

                beforeAvatarUpload(file) {
                    const isJPG = file.type === 'image/jpeg';
                    const isLt2M = file.size / 1024 / 1024 < 2;

                    // if (!isJPG) {
                    //     this.$message.error('上传头像图片只能是 JPG 格式!');
                    // }
                    if (!isLt2M) {
                        this.$message.error('上传头像图片大小不能超过 2MB!');
                    }
                    // return isJPG && isLt2M;
                    return isLt2M;
                },

                // 保存编辑后的个人信息
                editProfile() {
                    var _this = this;
                    this.editProfileData.imageUrl = this.edit_avatar
                    $.ajax({
                        url: '/chat/edit_profile',
                        type: 'post',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: JSON.stringify(_this.editProfileData),
                        success: function (res) {
                            // 刷新个人信息数据
                            _this.loadTableDataSelfInfo()
                        },
                        error: function (err) {
                            alert("save profile failed")
                        }
                    })
                },

                selectGame(game_id, game_href) {
                    window.location.href = '/game/' + game_href;
                }
            },
        });

        // 点击退出登录按钮，将chat preview 里的chanel 数组顺序保存
        //TODO

        //点击tab 加载通讯录
        $("#pills-profile-tab").on("click", function(){
            frame.loadTableDataAddressBook();
        });

        // 从通讯录点击目标人物之后，左边chatpreview追加选中项到顶部
        function leftSelectMoveTop(channel_id) {
            // 取得target 的 id，去搜索最后的未读信息，得到未读的msg_num，最后一条消息和时间，取得是否屏蔽的状态
            goeasy.history({
                channel: channel_id, //必需项
                limit: 1 //可选项，返回的消息条数，默认为100条，最多1000条
            },
            function(response){
                // console.log("收到历史消息: "+ JSON.stringify(response));
                if(response.content.messages.length > 0) {
                    for (let item of response.content.messages) {
                        handleGoeasyMsgBrief(channel_id, item)
                    }
                } else {
                    handleGoeasyMsgBrief(channel_id)
                }
            });
        }

        // 维护chat preview 队列 --
        function handleGoeasyMsgBrief(channel_id, message = "") {
            console.log("handleGoeasyMsgBrief")
            let _channel_id = channel_id
            let chat_brief = {}
            let msg_num = 1
            let is_block = false
            let msgContent = "";
            let sendTime = "";
            var name = frame.targetNotedName;
            var photo = frame.targetPhoto;

            if (message != "") {
                // 先取channel_id
                let index = message.content.lastIndexOf("|");
                var channel = message.content.substring(index + 1, message.content.length);
                let msgContentTmp = message.content.substring(0, index);
                // 再取sendMsgUserId
                let index_1 = msgContentTmp.lastIndexOf("|");
                msgContent = msgContentTmp.substring(0, index_1);
                sendTime = timestamp2FormatDate(message.time,"hh:mm")
            }
            if(_channel_id == "") {
                _channel_id = channel
                if(frame.tableDataSelfInfo[0].channel.length > 0) {
                    for(var i = 0; i <frame.tableDataSelfInfo[0].channel.length; i++) {
                        if(_channel_id == frame.tableDataSelfInfo[0].channel[i].channel_id) {
                            if (_channel_id.substring(0,3) == "GRP") {
                                photo = frame.defaultGroupAvater
                            } else if(_channel_id.substring(0,3) == "USR"){
                                photo = frame.tableDataSelfInfo[0].channel[i].photo
                            }
                            name = frame.tableDataSelfInfo[0].channel[i].name
                        }
                    }
                }
            }
            chat_brief = { "channel_id":_channel_id,
                                "name":name,
                                "photo":photo,
                                "msg_num":msg_num,
                                "latest_msg_brief":msgContent,
                                "latest_msg_time":sendTime,
                                "is_block":is_block}

            // chatPreview有重复，删除原来的
            if(frame.chatPreviewTableData.length > 0) {
                for (var i = 0; i < frame.chatPreviewTableData.length; i++) {
                    if(_channel_id == frame.chatPreviewTableData[i].channel_id ){
                        var index_2 = frame.chatPreviewTableData.indexOf(frame.chatPreviewTableData[i]);
                        frame.chatPreviewTableData.splice(index_2,1)
                        break;
                    }
                }
            }
            // chatPreview 追加这次新的
            frame.chatPreviewTableData.splice(0,0,chat_brief)
            chatPreviewSaveDB()
            // frame.chatPreviewTableData.push(chat_brief)
            // console.log(frame.chatPreviewTableData)
        }

        // 收到新消息之后，左边chatpreview追加选中项到顶部
        function chatPreviewCurrentUpdate(){
            console.log("chatPreviewCurrentUpdate")
            // 获取到当前左边所有的channel id
            if(frame.tableDataSelfInfo[0].channel.length > 0) {
                for(var i = 0; i <frame.tableDataSelfInfo[0].channel.length; i++) {
                    _channel = frame.tableDataSelfInfo[0].channel[i].channel_id
                    goeasy.subscribe({
                        channel: _channel,
                        onMessage: function (message) {
                            // chat preview 显示
                            handleGoeasyMsgBrief("", message)
                            // 先取channel_id
                            let index = message.content.lastIndexOf("|");
                            var channel = message.content.substring(index + 1, message.content.length);
                            var currentChannel = $("#currentChanel").val()
                            // 如果是点击或者会话中的channel, 则右边的chat record 需要更新
                            if( channel == currentChannel ){
                                handleGoeasyMsg(message)
                            }
                        }
                    });
                }
            }
        }

        //显示以前的订阅消息
        function historyChatRecord(channel_id) {
            goeasy.history({
                channel: channel_id, //必需项
                // start: start_time, //可选项，开始时间
                // end: end_time, //可选项，结束时间
                limit: 40 //可选项，返回的消息条数，默认为100条，最多1000条
            },
            function(response){
                // console.log("收到历史消息: "+ JSON.stringify(response));
                for (let item of response.content.messages) {
                    handleGoeasyMsg(item)
                }
                $(".messages").animate({
                    scrollTop: 9999
                }, "fast");
            });
        }

        //把消息转成需要的json格式，并在右边的chat record 展示
        function handleGoeasyMsg(message) {
            var fileuid = "";
            let chatRecord = {};
            var side;
            var type = "msg";
            var size = "0";
            var photo = "personal"
            let current_nickname = frame.targetNotedName;
            //先取channel_id
            let index = message.content.lastIndexOf("|");
            var channel = message.content.substring(index + 1, message.content.length);
            let msgContentTmp = message.content.substring(0, index);
            //再取sendMsgUserId
            let index_1 = msgContentTmp.lastIndexOf("|");
            var sendMsgUserId = msgContentTmp.substring(index_1 + 1, msgContentTmp.length);
            let msgContent = msgContentTmp.substring(0, index_1);
            var sendTime = timestamp2FormatDate(message.time,"yyyy/MM/dd hh:mm");
            side = (sendMsgUserId == frame.selfId) ? "right" : "left";
            if( msgContent.length>5 && msgContent.substring(0,5) == "/:fn=") {
                msgContent = msgContent.substring(5,msgContent.length)
                var msg_obj = JSON.parse(msgContent)
                type = judgeFileType(getExt(msg_obj.filename))
                size = filesizeCalc(msg_obj.filesize)
                msgContent = msg_obj.filename
                fileuid = msg_obj.fileuid
            }
            if(channel.substring(0,3) == "USR") {

            } else if(channel.substring(0,3) == "GRP") {
                if( frame.groupList.length == 0) {
                    alert("groupList is empty")
                } else {
                    for( var i = 0; i < frame.groupList.length; i++) {
                        if(frame.groupList[i]["user_id"] == sendMsgUserId) {
                            current_nickname = frame.groupList[i]["name"]
                            photo = frame.groupList[i]["photo"]
                        }
                    }
                }
            } else {
                alert("channel define err, not start with USR/GRP")
            }

            chatRecord = {"dir":side,
                        "notedName":current_nickname,
                        "time":sendTime,
                        "content":msgContent,
                        "photo" : photo,
                        "type" : type,
                        "size": size,
                        "fileuid": fileuid}
            frame.chatRecordTableData.push(chatRecord);
        }

        //点击发送按钮
        function publishMessage(filename="",filesize="",fileuid="") {
            var publishMessage = "";
            var message = "";
            var currentChannel = $("#currentChanel").val()
            if(filename != "") {
                var obj = { "filename":filename, "filesize":filesize, "fileuid":fileuid};
                message = '/:fn='+ JSON.stringify(obj)
            } else{
                message = $(".message-input input").val();
                if ($.trim(message) == '') {
                    return false;
                }
            }
            publishMessage = message + "|" + selfId + "|" + currentChannel;
            console.log("message:"+publishMessage)
            goeasy.publish({
                channel: currentChannel,
                message: publishMessage,
                onFailed: function (error) {
                    alert(error.code + " : " + error.content);
                },
                onSuccess: function () {
                    $(".message-input input").val("")
                    //滚动到底部
                    $(".messages").animate({
                        scrollTop: 9999
                    }, "fast");
                }
            });
        }

        // add contact点击搜索
        $(document).on("click", ".btn-user-search", function () {
            var type
            var search_content
            if(this.id == "button-addon2") {
                type = "by_id"
                search_content = $("#add-contact-search-id").val()
            } else if(this.id == "button-addon3") {
                type = "by_name"
                search_content = $("#add-contact-search-name").val()
            }
            $.ajax({
                url: '/chat/add_contact_search',
                type: 'get',
                data: {
                    type: type,
                    kw: search_content,
                },
                success: function (res) {
                    frame.loadingAddContactSearchRes = false;
                    if (res.count !== 0) {
                        frame.tableDataAddContactSearchRes = res
                    } else {
                        frame.tableDataAddContactSearchRes = []
                    }
                },
                error: function (err) {
                    frame.loadingAddContactSearchRes = false
                    frame.tableDataAddContactSearchRes = []
                },
                complete: function(){
                    $("#add-contact-search-id").val("");
                    $("#add-contact-search-name").val("");
                }
            })
        });

        // 修改备注确认按钮点击
        $(document).on("click", ".notename-revise-confirm", function () {
            console.log("reviseNotenameConfirm")
            if( $('#revise-name').val() != $('#revise-name').attr("beforeRevise")) {
                var target_id = $('#revise-name').attr("selectId")
                var new_notename = $('#revise-name').val()
                $.ajax({
                    url: '/chat/notename_revise',
                    type: 'post',
                    data: {
                        target_id: target_id,
                        new_notename: new_notename,
                    },
                    success: function (res) {
                        // 更新
                        frame.loadingAddressBook = false
                        frame.tableDataPeople = []
                        frame.loadTableDataAddressBook()
                    },
                    error: function (err) {
                    }
                })
            }
        });

        //一登陆就添加订阅一个临时channel， 方便推送
        function addSelfAndServerChannel(_channel){
            console.log("addSelfAndServerChannel:"+_channel)
            goeasy.subscribe({
                channel: _channel,
                onMessage: function (message) {
                    console.log("onMessage:"+message.content)
                    // message.content msg_content|msg_type|user_id
                    var arr = divideMsgIntoParts(message.content, 3)
                    var msg_content = arr[0]
                    var msg_type = arr[1]
                    var user_id = arr[2]
                    if(msg_type == "AddFriend") {
                        // 根据user_id 查photo 和nickname
                        $.ajax({
                            url: '/chat/find_user',
                            type: 'post',
                            data: {
                                user_id: user_id,
                            },
                            success: function (res) {
                                var template
                                var msg
                                if(msg_content == "Request") {
                                    template ='<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                                                '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                                                '<span data-notify="icon"></span> ' +
                                                '<span data-notify="title">{1}</span> ' +
                                                '<span data-notify="message">{2}</span>' +
                                                '<div><button type="button" class="btn btn-warning btn-sm m-2 add-friend-ignore" value="'+ user_id + '">忽略</button>' +
                                                '<button type="button" class="btn btn-warning btn-sm m-2 add-friend-accept" value="'+ user_id + '">接受</button></div>' +
                                            '</div>'
                                    msg = `<img src="`+
                                            res.photo +
                                            `" alt="no image"` +
                                            `style="width: 30px;border-radius: 50%;padding: 1px;border: 1px solid #2ecc71;height: auto;"`+
                                            `onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />`+
                                            res.nickname +
                                            '请求添加您为好友'
                                    createNotify("", '好友添加', msg, template)
                                } else if(msg_content == "Refuse"){
                                    template =  '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                                                        '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                                                        '<span data-notify="icon"></span> ' +
                                                        '<span data-notify="title">{1}</span> ' +
                                                        '<span data-notify="message">{2}</span>' +
                                                    '</div>'
                                    msg = `<img src="`+
                                            res.photo +
                                            `" alt="no image"` +
                                            `style="width: 30px;border-radius: 50%;padding: 1px;border: 1px solid #2ecc71;height: auto;"`+
                                            `onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />`+
                                            res.nickname +
                                            '拒绝了您的添加请求'
                                    createNotify("", '好友添加',msg, template, true)
                                } else if(msg_content == "Accept"){
                                    template =  '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">' +
                                                        '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                                                        '<span data-notify="icon"></span> ' +
                                                        '<span data-notify="title">{1}</span> ' +
                                                        '<span data-notify="message">{2}</span>' +
                                                    '</div>'
                                    msg = `<img src="`+
                                            res.photo +
                                            `" alt="no image"` +
                                            `style="width: 30px;border-radius: 50%;padding: 1px;border: 1px solid #2ecc71;height: auto;"`+
                                            `onerror="this.src='/assets/new/headimg-5cbe32c69a642e897b49f052aa231458ee6bf3b511c76698be74ce67776e87fe.png'" />`+
                                            res.nickname +
                                            '接受了您的添加请求，你们已经是好友啦'
                                    createNotify("", '好友添加', msg, template, true)
                                    $("#currentChanel").val(res.channel)
                                    goeasy.subscribe({
                                        channel: res.channel,
                                        onMessage: function (message) {
                                            handleGoeasyMsgBrief("", message)
                                            // 先取channel_id
                                            let index = message.content.lastIndexOf("|");
                                            var channel = message.content.substring(index + 1, message.content.length);
                                            var currentChannel = $("#currentChanel").val()
                                            if( channel == currentChannel ){
                                                // console.log("handleGoeasyMsg")
                                                handleGoeasyMsg(message)
                                            }
                                        },
                                        onSuccess: function () {
                                            // TODO 跳转到chat preview 添加到队列
                                            // 追加好友列表
                                            frame.loadTableDataAddressBook()
                                            frame.loadTableDataSelfInfo()
                                        },
                                        onFailed: function (error) {
                                            alert("Channel订阅失败, 错误编码：" + error.code + " 错误信息：" + error.content)
                                        }
                                    });
                                }
                            },
                        })
                    } else if (msg_type == "BeInvitedGroupChat"){
                        $("#currentChanel").val(user_id)
                        // 追加监听
                        goeasy.subscribe({
                            channel: user_id,
                            onMessage: function (message) {
                                handleGoeasyMsgBrief("", message)
                                // 先取channel_id
                                let index = message.content.lastIndexOf("|");
                                var channel = message.content.substring(index + 1, message.content.length);
                                var currentChannel = $("#currentChanel").val()
                                if( channel == currentChannel ){
                                    handleGoeasyMsg(message)
                                }
                            },
                            onSuccess: function () {
                                // TODO 跳转到chat preview 添加到队列
                                findGroupMember(user_id)
                                frame.loadTableDataSelfInfo(user_id)
                            },
                            onFailed: function (error) {
                                alert("Channel订阅失败, 错误编码：" + error.code + " 错误信息：" + error.content)
                            }
                        });
                    }
                }
            });
        }

        // 创建通知对象
        function createNotify(icon, title, message, template, allow_dismiss=false){
            notify = $.notify({
                // options
                icon: icon,
                title: title,
                message: message,
            },{
                // settings
                type: 'pastel-info',
                placement: {
                    from: "bottom",
                    align: "right"
                },
                delay: 0,
                icon_type: 'image',
                newest_on_top: true,
                allow_dismiss: allow_dismiss,
                template: template,
            });
        }

        // 根据 group_id （channel）查找该群聊下的人员信息
        function findGroupMember(channel, flag=false){
            $.ajax({
                url: '/chat/find_group_member',
                type: 'post',
                data: {
                    channel: channel,
                    except_self: flag,
                },
                success: function (res) {
                    if(flag) {
                        frame.selectedTargets = []
                        frame.selectedTargets = res
                        for(var i = 0; i < frame.tableDataPeople.length; i++){
                            for(var j = 0; j < frame.tableDataPeople[i]["personList"].length; j++){
                                for(var k = 0; k < frame.selectedTargets.length; k++) {
                                    if(frame.tableDataPeople[i]["personList"][j]["uid"] == frame.selectedTargets[k]["user_id"]) {
                                        frame.tableDataPeople[i]["personList"][j]["ischeck"] = true
                                        frame.tableDataPeople[i]["personList"][j]["isDisabled"] = true
                                    }
                                }
                            }
                        }
                    } else{
                        frame.groupList = []
                        frame.groupList = res
                    }
                },
            })
        }

        // 忽略添加好友
        $(document).on("click", ".add-friend-ignore", function () {
            var user_id = $(this).val()
            $.ajax({
                url: '/chat/add_friend_ignore',
                type: 'post',
                data: {
                    user_id: user_id,
                },
                success: function (res) {
                    notify.close();
                    // 告诉server拒绝了
                },
            })
        });

        // 接受添加好友
        $(document).on("click", ".add-friend-accept", function () {
            var user_id = $(this).val()
            $.ajax({
                url: '/chat/add_friend_accept',
                type: 'post',
                data: {
                    user_id: user_id,
                },
                success: function (res) {
                    notify.close();
                },
            })
        });

        //点击聊天记录框上方群名或个人名字右边的箭头，展开塌陷板，获取数据
        $(document).on("click", ".target-profile-link", function () {
            frame.memberInfoClickFlag == !frame.memberInfoClickFlag
            if(!frame.memberInfoClickFlag){
                var channel = $("#currentChanel").val()
                if(channel.substring(0,3) == "USR") {
                    frame.groupList = []
                    frame.groupList.push({"user_id":frame.currentChatUid, "photo":frame.targetPhoto, "name":frame.targetNotedName})
                } else if(channel.substring(0,3) == "GRP") {
                    findGroupMember(channel)
                }
            }
        });

        // 个人huo群聊天点击添加弹出发起群聊modal
        $(document).on("click", ".member-info-item-add", function () {
            console.log("startchat: "+frame.currentChatUid)
            $("#modalStartChat").modal()
            frame.selectedTargets = []
            var channel = $("#currentChanel").val()
            var arr_member_user_id
            var arr_member_name
            var arr_member_photo
            if(channel.substring(0,3) == "USR"){
                frame.selectedTargets.push({"user_id":frame.currentChatUid, "photo":frame.targetPhoto, "name":frame.targetNotedName})
                for(var i = 0; i < frame.tableDataPeople.length; i++){
                    for(var j = 0; j < frame.tableDataPeople[i]["personList"].length; j++){
                        if(frame.tableDataPeople[i]["personList"][j]["uid"] == frame.currentChatUid) {
                            frame.tableDataPeople[i]["personList"][j]["ischeck"] = true
                            frame.tableDataPeople[i]["personList"][j]["isDisabled"] = true
                        }
                    }
                }
            } else if(channel.substring(0,3) == "GRP") {
                console.log("GRP")
                console.log(frame.selectedTargets)
                findGroupMember(channel, true)
            }

        });

        // 点击 开始群聊modal的取消按钮，将原来的checkbox状态清空
        $(document).on("click", ".start-chat-close", function () {
            frame.selectedTargets = []
            for(var i = 0; i < frame.tableDataPeople.length; i++){
                for(var j = 0; j < frame.tableDataPeople[i]["personList"].length; j++){
                    frame.tableDataPeople[i]["personList"][j]["ischeck"] = false
                    frame.tableDataPeople[i]["personList"][j]["isDisabled"] = false
                }
            }
        });

        // 点击 开始群聊modal的确认按钮，创建群聊
        $(document).on("click", ".start-chat-confirm", function () {
            if(frame.groupChatName == "") {
                // alert("11")
                $("#must_fill_alert").html("※ 群聊名称为必填项")
            } else {
                var before_channel = "" + frame.currentChatUid
                console.log("before_channel--"+before_channel)
                var str_member_list = ""
                var str_member_photo = ""
                var str_member_name = ""
                var chat_group_name = ""
                var str_member_list_include_self
                frame.groupList = []
                for(var i = 0; i < frame.selectedTargets.length; i++){
                    str_member_list = str_member_list + frame.selectedTargets[i]["user_id"] +","
                    // 维护当前组的信息
                    frame.groupList.push({"user_id":frame.selectedTargets[i]["user_id"],
                                    "photo":frame.selectedTargets[i]["photo"],
                                    "name":frame.selectedTargets[i]["name"]})
                }
                // 添加自己
                // selectedTargets 不包括自己，但groupList 和 selfInfo 中包括自己
                // groupList只有在点击箭头的时候才会把自己加进去，平常维护该数组时不包括自己
                str_member_list = str_member_list.substring(0,str_member_list.length-1)
                frame.targetNotedName = frame.groupChatName;
                frame.targetPhoto = frame.defaultGroupAvater;
                if (before_channel.substring(0,3) == "GRP") {
                    str_member_list_include_self = str_member_list
                } else {
                    str_member_list_include_self = str_member_list + "," + frame.selfId
                }

                $.ajax({
                    url: '/chat/start_group_chat',
                    type: 'post',
                    data: {
                        group_chat_name: frame.groupChatName,
                        member_list: str_member_list_include_self,
                    },
                    success: function (res) {
                        $("#modalStartChat").modal("hide")
                        // 将该channelid 保存为当前channel
                        $("#currentChanel").val(res.channel)
                        frame.currentChatUid = res.channel
                        frame.tableDataSelfInfo[0].channel.push({"channel_id":res.channel,
                                                                "target_user_id": str_member_list,
                                                                "name": frame.groupChatName,
                                                                "photo": frame.targetPhoto })
                        chatPreviewCurrentUpdate()
                        historyChatRecord(res.channel)
                        leftSelectMoveTop(res.channel)
                        $("#collapseOne").removeClass("show")
                        // 清空相关临时数据
                        frame.selectedTargets = []
                        frame.groupChatName =  ""

                    },
                })
            }
        });
        //# sourceURL=pen.js

        // 模拟点击附件
        $(document).on("click", ".attachment", function () {
            console.log("attachment")
            $("#attach_btn").click()
        });

        // 点击退出按钮，保存最近的聊天对象（chat_preview_table_data）
        function chatPreviewSaveDB() {
            // chat preview的channel_id做成字符串存db
            var chat_preview_list = "";
            for (var i = 0; i < frame.chatPreviewTableData.length; i++) {
                chat_preview_list = chat_preview_list + frame.chatPreviewTableData[i].channel_id + ","
            }

            $.ajax({
                url: '/chat/chat_preview',
                type: 'post',
                // asyn: false,
                data: {
                    chat_preview_list: chat_preview_list,
                },
                success: function (res) {
                },
                error: function (err) {
                }
            })
        }

        // $(function () {
        //     $(".selectpicker").selectpicker({
        //         noneSelectedText: '请选择'
        //     });
        //     $(window).on('load', function () {
        //         $('.selectpicker').selectpicker('val', '');
        //         $('.selectpicker').selectpicker('refresh');
        //     });
        //     //下拉数据加载
        //     $.ajax({
        //         type: 'post',
        //         url: basePath + "/lictran/tranStation/loadRoadForTranStationDetail",
        //         dataType: 'json',
        //         success: function (datas) {//返回list数据并循环获取

        //         }
        //     });
        // });
    </script>
</body>

</html>