version: '3'
services:
  db:
    build: ./docker/mysql
    ports:
      - 33060:3306
    hostname: db
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --skip-character-set-client-handshake
    volumes:
      - ./data/db:/var/lib/mysql
    environment:
      TZ: Asia/Shanghai
      MYSQL_DATABASE: chat
      MYSQL_ROOT_PASSWORD: password
  web:
    build:
      context: .
      # args:
        # http_proxy: "http://10.74.169.139:8080"
        # https_proxy: "http://10.74.169.139:8080"
    volumes:
      - .:/opt/application/current
    ports:
      - "31000:3000"
    environment:
      TZ: Asia/Shanghai
      RAILS_ENV: 'development'
      RACK_ENV: 'development'
      DB_HOST: 'db'
      DB_PORT: '3306'
      DB_USER: 'root'
      DB_PASSWORD: 'password'
      DB_NAME: 'chat'
      REPAIR_CASE_PATH: 'repair_case'
      ACCESS_PASS: ''
      ELASTIC_SEARCH: 'elasticsearch'
      REDISCLOUD_URL: 'redis://localhost:6379'
      IS_CLOUD: '0' #0:本地环境，1:云环境
      WEB_CONCURRENCY: 3

    links:
      - db
      # - elasticsearch
    #  - redis:redis
    depends_on:
      - 'db'

  # elasticsearch:
  #   build:
  #     context: ./docker/es
  #     args:
  #       USER_NAME: esuser
  #   container_name: elasticsearch
  #   image: elasticsearch_single
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - "19200:9200"
  #   volumes:
  #     - ./data/es:/usr/share/elasticsearch/data

  # kibana:
  #   build: ./_db_docker/kibana
  #   container_name: kibana
  #   ports:
  #     - "15601:5601"

  #redis:
  #  image: redis:latest
  #  container_name: redis
  #  ports:
  #    - "6379:6379"
  #  command: redis-server --appendonly yes
